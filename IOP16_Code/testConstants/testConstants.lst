ADR LABEL		MACH	OPC	V1[,V2]			// COMMENT
000	START		0xC01F	JSR	INITVDU			// INITIALIZE THE VDU
001				0xC024	JSR	INITURT			// INITIALIZE THE ACIA UART
002	CLRSCR		0x410C	LRI	Reg1,0X0C		// ANSI CLEAR THE SCREEN CMD
003				0xC029	JSR	WR2VDU			// WRITE OUT CHAR IN R1
004	YELLOW		0x411B	LRI	Reg1,STRING2	// ESC SEQ FOR YELLOW CHARS
005				0xC029	JSR	WR2VDU			// WRITE OUT CHAR IN R1
006				0x415B	LRI	Reg1,0X5B		// [
007				0xC029	JSR	WR2VDU			// WRITE OUT CHAR IN R1
008				0x4133	LRI	Reg1,0X33		// 3
009				0xC029	JSR	WR2VDU			// WRITE OUT CHAR IN R1
00a				0x4133	LRI	Reg1,0X33		// 3
00b				0xC029	JSR	WR2VDU			// WRITE OUT CHAR IN R1
00c				0x416D	LRI	Reg1,0X6D		// m 
00d				0xC029	JSR	WR2VDU			// WRITE OUT CHAR IN R1
00e				0x4105	LRI	Reg1,STRING1	// R1 POINTS TO STRING1
00f				0xC02E	JSR	PRSTR			// PRINT OUT STRING TO VDU
010	START		0xC013	JSR	KB2U			// KEYBOARD TO PDP-11
011				0xC019	JSR	U2VGA			// PDP-11 TO VGA
012				0xD010	JMP	START			// LOOP FOREVER
013	KB2U		0x600C	IOR	Reg0,KBD_STAT	// READ KBD STATUS
014				0xA001	ARI	Reg0,0X01		// MASK RX DATA PRESENT BIT
015				0xE018	BEZ	NOKDBD			// NO KBD DATA
016				0x610D	IOR	Reg1,KBD_DATA	// READ KBD DATA
017				0x7109	IOW	Reg1,UART_TX	// WRITE TO UART DATA
018	NOKDBD		0x3008	RTS					// DONE KEYBOARD TO UART
019	U2VGA		0x6008	IOR	Reg0,UART_STAT	// READ UART STATUS
01a				0xA001	ARI	Reg0,0X01		// MASK RX DATA PRESENT BIT
01b				0xE01E	BEZ	NOUDAT			// NO UART DATA
01c				0x6109	IOR	Reg1,UART_RX	// READ UART DATA
01d				0x710B	IOW	Reg1,VDU_TX		// WRITE OUT SCREEN
01e	NOUDAT		0x3008	RTS					// DONE UART TO VGA
01f	INITVDU		0x4003	LRI	Reg0,0X03		// RESET TERMINAL COMMAND
020				0x700A	IOW	Reg0,VDU_CTRL	// WRITE VDU CMD REG
021				0x4020	LRI	Reg0,0X20		// TX CTRLS RTS
022				0x700A	IOW	Reg0,VDU_CTRL	// WRITE VDU CMD REG
023				0x3008	RTS					// 
024	INITURT		0x4003	LRI	Reg0,0X03		// RESET UART COMMAND
025				0x7008	IOW	Reg0,UART_CTRL	// WRITE UART CMD REG
026				0x4020	LRI	Reg0,0X20		// TX CTRLS RTS
027				0x7008	IOW	Reg0,UART_CTRL	// WRITE UART CMD REG
028				0x3008	RTS					// 
029	WR2VDU		0x600A	IOR	Reg0,VDU_STAT	// READ VDU STATUS
02a				0xA002	ARI	Reg0,0X02		// TX EMPTY FLAG
02b				0xE029	BEZ	WR2VDU			// WAIT UNTIL TX EMPTY
02c				0x710B	IOW	Reg1,VDU_TX		// WRITE OUT R1 TO SCREEN
02d				0x3008	RTS					// 
02e	PRSTR		0x710E	IOW	Reg1,LD_CON_ADR	// LOAD CONSTANTS ADDRESS
02f	PRSTR2		0x610E	IOR	Reg1,RD_CON_DAT	// READ CHAR (NEXT)
030				0x5100	CMP	Reg1,0X00		// IS END OF STRING?
031				0xF033	BNE	SKIPPS			// NOT END OF STRING
032				0x3008	RTS					// RETURN IF END
033	SKIPPS		0xC029	JSR	WR2VDU			// PRINT TO VDU
034				0xD02F	JMP	PRSTR2			// LOOP UNTIL NULL TERM
