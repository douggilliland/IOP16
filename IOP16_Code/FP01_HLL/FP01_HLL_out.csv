LABEL,OPCODE,REG_LABEL,OFFSET_ADDR,COMMENT
WR001,IOW,0X09,0X05,** SET IODIRA TO ALL_INS **
,LRI,0X00,0X48,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR001_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR001_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X00,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR001_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR001_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0XFF,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR001_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR001_3,,LOOP BACK IF STILL BUSY
WR002,IOW,0X09,0X05,** SET IODIRB TO ALL_OUTS **
,LRI,0X00,0X48,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR002_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR002_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X01,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR002_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR002_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0X00,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR002_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR002_3,,LOOP BACK IF STILL BUSY
WR003,IOW,0X09,0X05,** SET IPOLA TO INVERTED **
,LRI,0X00,0X48,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR003_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR003_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X02,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR003_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR003_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0XFF,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR003_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR003_3,,LOOP BACK IF STILL BUSY
WR004,IOW,0X09,0X05,** SET GPINTENA TO ENABLED **
,LRI,0X00,0X48,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR004_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR004_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0x04,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR004_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR004_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0XFF,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR004_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR004_3,,LOOP BACK IF STILL BUSY
WR005,IOW,0X09,0X05,** SET GPINTENB TO DISABLED **
,LRI,0X00,0X48,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR005_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR005_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0x05,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR005_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR005_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0X00,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR005_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR005_3,,LOOP BACK IF STILL BUSY
WR006,IOW,0X09,0X05,** SET DEFVALA TO 0X00 **
,LRI,0X00,0X48,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR006_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR006_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X06,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR006_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR006_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0X00,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR006_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR006_3,,LOOP BACK IF STILL BUSY
WR007,IOW,0X09,0X05,** SET INTCONA TO INTCON_PREVPIN **
,LRI,0X00,0X48,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR007_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR007_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0x08,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR007_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR007_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0x00,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR007_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR007_3,,LOOP BACK IF STILL BUSY
WR008,IOW,0X09,0X05,** SET IOCONA TO DISABLE SEQ **
,LRI,0X00,0X48,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR008_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR008_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0x0A,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR008_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR008_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0x04,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR008_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR008_3,,LOOP BACK IF STILL BUSY
WR009,IOW,0X09,0X05,** SET IOCONB TO DISABLE SEQ **
,LRI,0X00,0X48,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR009_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR009_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0x0B,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR009_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR009_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0x04,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR009_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR009_3,,LOOP BACK IF STILL BUSY
WR010,IOW,0X09,0X05,** SET GPPUA TO PULLUPS **
,LRI,0X00,0X48,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR010_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR010_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X0C,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR010_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR010_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0XFF,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR010_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR010_3,,LOOP BACK IF STILL BUSY
WR011,IOW,0X09,0X05,** SET OLATB TO 0X55 **
,LRI,0X00,0X48,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR011_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR011_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X15,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR011_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR011_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0X55,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR011_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR011_3,,LOOP BACK IF STILL BUSY
WR101,IOW,0X09,0X05,** SET IODIRA TO ALL_INS **
,LRI,0X00,0X4A,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR101_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR101_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X00,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR101_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR101_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0XFF,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR101_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR101_3,,LOOP BACK IF STILL BUSY
WR102,IOW,0X09,0X05,** SET IODIRB TO ALL_OUTS **
,LRI,0X00,0X4A,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR102_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR102_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X01,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR102_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR102_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0X00,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR102_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR102_3,,LOOP BACK IF STILL BUSY
WR103,IOW,0X09,0X05,** SET IPOLA TO INVERTED **
,LRI,0X00,0X4A,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR103_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR103_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X02,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR103_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR103_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0XFF,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR103_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR103_3,,LOOP BACK IF STILL BUSY
WR104,IOW,0X09,0X05,** SET GPINTENA TO ENABLED **
,LRI,0X00,0X4A,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR104_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR104_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0x04,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR104_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR104_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0XFF,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR104_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR104_3,,LOOP BACK IF STILL BUSY
WR105,IOW,0X09,0X05,** SET GPINTENB TO DISABLED **
,LRI,0X00,0X4A,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR105_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR105_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0x05,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR105_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR105_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0X00,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR105_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR105_3,,LOOP BACK IF STILL BUSY
WR106,IOW,0X09,0X05,** SET DEFVALA TO 0X00 **
,LRI,0X00,0X4A,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR106_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR106_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X06,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR106_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR106_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0X00,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR106_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR106_3,,LOOP BACK IF STILL BUSY
WR107,IOW,0X09,0X05,** SET INTCONA TO INTCON_PREVPIN **
,LRI,0X00,0X4A,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR107_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR107_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0x08,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR107_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR107_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0x00,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR107_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR107_3,,LOOP BACK IF STILL BUSY
WR108,IOW,0X09,0X05,** SET IOCONA TO DISABLE SEQ **
,LRI,0X00,0X4A,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR108_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR108_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0x0A,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR108_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR108_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0x04,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR108_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR108_3,,LOOP BACK IF STILL BUSY
WR109,IOW,0X09,0X05,** SET IOCONB TO DISABLE SEQ **
,LRI,0X00,0X4A,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR109_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR109_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0x0B,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR109_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR109_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0x04,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR109_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR109_3,,LOOP BACK IF STILL BUSY
WR110,IOW,0X09,0X05,** SET GPPUA TO PULLUPS **
,LRI,0X00,0X4A,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR110_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR110_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X0C,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR110_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR110_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0XFF,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR110_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR110_3,,LOOP BACK IF STILL BUSY
WR111,IOW,0X09,0X05,** SET OLATB TO 0X55 **
,LRI,0X00,0X4A,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR111_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR111_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X15,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR111_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR111_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0XAA,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR111_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR111_3,,LOOP BACK IF STILL BUSY
WR201,IOW,0X09,0X05,** SET IODIRA TO ALL_INS **
,LRI,0X00,0X4C,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR201_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR201_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X00,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR201_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR201_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0XFF,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR201_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR201_3,,LOOP BACK IF STILL BUSY
WR202,IOW,0X09,0X05,** SET IODIRB TO ALL_OUTS **
,LRI,0X00,0X4C,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR202_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR202_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X01,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR202_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR202_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0X00,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR202_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR202_3,,LOOP BACK IF STILL BUSY
WR203,IOW,0X09,0X05,** SET IPOLA TO INVERTED **
,LRI,0X00,0X4C,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR203_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR203_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X02,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR203_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR203_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0XFF,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR203_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR203_3,,LOOP BACK IF STILL BUSY
WR204,IOW,0X09,0X05,** SET GPINTENA TO ENABLED **
,LRI,0X00,0X4C,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR204_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR204_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0x04,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR204_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR204_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0XFF,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR204_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR204_3,,LOOP BACK IF STILL BUSY
WR205,IOW,0X09,0X05,** SET GPINTENB TO DISABLED **
,LRI,0X00,0X4C,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR205_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR205_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0x05,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR205_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR205_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0X00,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR205_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR205_3,,LOOP BACK IF STILL BUSY
WR206,IOW,0X09,0X05,** SET DEFVALA TO 0X00 **
,LRI,0X00,0X4C,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR206_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR206_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X06,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR206_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR206_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0X00,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR206_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR206_3,,LOOP BACK IF STILL BUSY
WR207,IOW,0X09,0X05,** SET INTCONA TO INTCON_PREVPIN **
,LRI,0X00,0X4C,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR207_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR207_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0x08,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR207_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR207_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0x00,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR207_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR207_3,,LOOP BACK IF STILL BUSY
WR208,IOW,0X09,0X05,** SET IOCONA TO DISABLE SEQ **
,LRI,0X00,0X4C,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR208_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR208_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0x0A,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR208_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR208_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0x04,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR208_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR208_3,,LOOP BACK IF STILL BUSY
WR209,IOW,0X09,0X05,** SET IOCONB TO DISABLE SEQ **
,LRI,0X00,0X4C,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR209_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR209_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0x0B,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR209_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR209_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0x04,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR209_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR209_3,,LOOP BACK IF STILL BUSY
WR210,IOW,0X09,0X05,** SET GPPUA TO PULLUPS **
,LRI,0X00,0X4C,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR210_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR210_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X0C,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR210_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR210_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0XFF,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR210_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR210_3,,LOOP BACK IF STILL BUSY
WR211,IOW,0X09,0X05,** SET OLATB TO 0X0F **
,LRI,0X00,0X4C,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR211_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR211_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X15,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR211_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR211_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0X0F,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR211_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR211_3,,LOOP BACK IF STILL BUSY
WR301,IOW,0X09,0X05,** SET IODIRA TO ALL_INS **
,LRI,0X00,0X4E,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR301_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR301_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X00,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR301_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR301_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0XFF,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR301_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR301_3,,LOOP BACK IF STILL BUSY
WR302,IOW,0X09,0X05,** SET IODIRB TO ALL_OUTS **
,LRI,0X00,0X4E,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR302_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR302_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X01,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR302_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR302_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0X00,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR302_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR302_3,,LOOP BACK IF STILL BUSY
WR303,IOW,0X09,0X05,** SET IPOLA TO INVERTED **
,LRI,0X00,0X4E,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR303_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR303_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X02,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR303_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR303_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0XFF,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR303_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR303_3,,LOOP BACK IF STILL BUSY
WR304,IOW,0X09,0X05,** SET GPINTENA TO ENABLED **
,LRI,0X00,0X4E,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR304_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR304_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0x04,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR304_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR304_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0XFF,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR304_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR304_3,,LOOP BACK IF STILL BUSY
WR305,IOW,0X09,0X05,** SET GPINTENB TO DISABLED **
,LRI,0X00,0X4E,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR305_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR305_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0x05,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR305_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR305_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0X00,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR305_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR305_3,,LOOP BACK IF STILL BUSY
WR306,IOW,0X09,0X05,** SET DEFVALA TO 0X00 **
,LRI,0X00,0X4E,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR306_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR306_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X06,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR306_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR306_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0X00,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR306_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR306_3,,LOOP BACK IF STILL BUSY
WR307,IOW,0X09,0X05,** SET INTCONA TO INTCON_PREVPIN **
,LRI,0X00,0X4E,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR307_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR307_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0x08,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR307_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR307_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0x00,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR307_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR307_3,,LOOP BACK IF STILL BUSY
WR308,IOW,0X09,0X05,** SET IOCONA TO DISABLE SEQ **
,LRI,0X00,0X4E,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR308_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR308_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0x0A,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR308_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR308_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0x04,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR308_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR308_3,,LOOP BACK IF STILL BUSY
WR309,IOW,0X09,0X05,** SET IOCONB TO DISABLE SEQ **
,LRI,0X00,0X4E,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR309_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR309_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0x0B,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR309_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR309_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0x04,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR309_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR309_3,,LOOP BACK IF STILL BUSY
WR310,IOW,0X09,0X05,** SET GPPUA TO PULLUPS **
,LRI,0X00,0X4E,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR310_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR310_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X0C,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR310_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR310_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0XFF,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR310_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR310_3,,LOOP BACK IF STILL BUSY
WR311,IOW,0X09,0X05,** SET OLATB TO 0XF0 **
,LRI,0X00,0X4E,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR311_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR311_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X15,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR311_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR311_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0XF0,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR311_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BUT
,BNZ,WR311_3,,LOOP BACK IF STILL BUSY
HALT,JMP,HALT,,LOOP FOREVER
