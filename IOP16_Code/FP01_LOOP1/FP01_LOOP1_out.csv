LABEL,OPCODE,REG_LABEL,OFFSET_ADDR,COMMENT
WR001,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X48,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR001_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR001_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X00,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR001_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR001_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0XFF,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR001_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR001_3,,LOOP BACK IF STILL BUSY
WR002,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X48,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR002_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR002_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X01,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR002_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR002_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0X00,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR002_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR002_3,,LOOP BACK IF STILL BUSY
WR003,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X48,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR003_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR003_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X02,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR003_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR003_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0XFF,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR003_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR003_3,,LOOP BACK IF STILL BUSY
WR004,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X48,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR004_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR004_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0x04,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR004_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR004_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0XFF,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR004_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR004_3,,LOOP BACK IF STILL BUSY
WR005,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X48,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR005_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR005_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0x05,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR005_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR005_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0X00,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR005_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR005_3,,LOOP BACK IF STILL BUSY
WR006,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X48,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR006_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR006_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X06,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR006_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR006_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0X00,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR006_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR006_3,,LOOP BACK IF STILL BUSY
WR007,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X48,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR007_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR007_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0x08,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR007_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR007_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0x00,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR007_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR007_3,,LOOP BACK IF STILL BUSY
WR008,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X48,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR008_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR008_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0x0A,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR008_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR008_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0x64,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR008_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR008_3,,LOOP BACK IF STILL BUSY
WR010,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X48,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR010_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR010_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X0C,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR010_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR010_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0XFF,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR010_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR010_3,,LOOP BACK IF STILL BUSY
WR011,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X48,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR011_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR011_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X15,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR011_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR011_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0X55,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR011_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR011_3,,LOOP BACK IF STILL BUSY
WR022,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X4A,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR022_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR022_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X00,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR022_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR022_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0XFF,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR022_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR022_3,,LOOP BACK IF STILL BUSY
WR023,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X4A,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR023_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR023_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X01,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR023_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR023_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0X00,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR023_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR023_3,,LOOP BACK IF STILL BUSY
WR024,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X4A,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR024_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR024_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X02,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR024_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR024_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0XFF,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR024_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR024_3,,LOOP BACK IF STILL BUSY
WR025,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X4A,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR025_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR025_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0x04,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR025_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR025_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0XFF,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR025_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR025_3,,LOOP BACK IF STILL BUSY
WR021,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X4A,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR021_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR021_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0x05,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR021_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR021_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0X00,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR021_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR021_3,,LOOP BACK IF STILL BUSY
WR026,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X4A,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR026_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR026_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X06,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR026_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR026_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0X00,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR026_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR026_3,,LOOP BACK IF STILL BUSY
WR027,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X4A,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR027_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR027_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0x08,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR027_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR027_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0x00,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR027_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR027_3,,LOOP BACK IF STILL BUSY
WR028,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X4A,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR028_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR028_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0x0A,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR028_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR028_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0x64,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR028_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR028_3,,LOOP BACK IF STILL BUSY
WR030,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X4A,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR030_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR030_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X0C,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR030_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR030_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0XFF,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR030_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR030_3,,LOOP BACK IF STILL BUSY
WR031,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X4A,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR031_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR031_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X15,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR031_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR031_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0XAA,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR031_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR031_3,,LOOP BACK IF STILL BUSY
WR040,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X4C,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR040_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR040_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X00,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR040_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR040_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0XFF,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR040_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR040_3,,LOOP BACK IF STILL BUSY
WR041,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X4C,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR041_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR041_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X01,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR041_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR041_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0X00,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR041_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR041_3,,LOOP BACK IF STILL BUSY
WR042,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X4C,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR042_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR042_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X02,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR042_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR042_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0XFF,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR042_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR042_3,,LOOP BACK IF STILL BUSY
WR043,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X4C,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR043_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR043_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0x04,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR043_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR043_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0XFF,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR043_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR043_3,,LOOP BACK IF STILL BUSY
WR044,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X4C,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR044_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR044_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0x05,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR044_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR044_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0X00,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR044_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR044_3,,LOOP BACK IF STILL BUSY
WR045,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X4C,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR045_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR045_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X06,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR045_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR045_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0X00,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR045_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR045_3,,LOOP BACK IF STILL BUSY
WR046,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X4C,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR046_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR046_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0x08,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR046_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR046_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0x00,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR046_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR046_3,,LOOP BACK IF STILL BUSY
WR047,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X4C,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR047_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR047_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0x0A,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR047_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR047_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0x64,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR047_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR047_3,,LOOP BACK IF STILL BUSY
WR049,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X4C,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR049_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR049_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X0C,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR049_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR049_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0XFF,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR049_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR049_3,,LOOP BACK IF STILL BUSY
WR050,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X4C,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR050_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR050_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X15,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR050_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR050_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0X0F,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR050_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR050_3,,LOOP BACK IF STILL BUSY
WR362,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X4E,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR362_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR362_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X00,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR362_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR362_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0XFF,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR362_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR362_3,,LOOP BACK IF STILL BUSY
WR363,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X4E,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR363_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR363_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X01,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR363_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR363_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0X00,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR363_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR363_3,,LOOP BACK IF STILL BUSY
WR364,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X4E,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR364_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR364_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X02,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR364_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR364_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0XFF,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR364_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR364_3,,LOOP BACK IF STILL BUSY
WR365,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X4E,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR365_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR365_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0x04,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR365_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR365_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0XFF,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR365_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR365_3,,LOOP BACK IF STILL BUSY
WR361,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X4E,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR361_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR361_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0x05,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR361_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR361_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0X00,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR361_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR361_3,,LOOP BACK IF STILL BUSY
WR366,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X4E,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR366_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR366_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X06,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR366_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR366_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0X00,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR366_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR366_3,,LOOP BACK IF STILL BUSY
WR367,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X4E,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR367_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR367_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0x08,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR367_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR367_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0x00,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR367_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR367_3,,LOOP BACK IF STILL BUSY
WR368,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X4E,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR368_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR368_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0x0A,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR368_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR368_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0x64,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR368_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR368_3,,LOOP BACK IF STILL BUSY
WR370,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X4E,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR370_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR370_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X0C,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR370_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR370_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0XFF,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR370_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR370_3,,LOOP BACK IF STILL BUSY
WR371,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X4E,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR371_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR371_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X15,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR371_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR371_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,LRI,0X01,0XF0,WRITE DATA TO REG
,IOW,0X01,0X04,WRITE MCP REGISTER TO MCP
WR371_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR371_3,,LOOP BACK IF STILL BUSY
RD400,IOW,0X09,0X05,ISSUE I2C START COMMAND
,LRI,0X00,0X48,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE I2C SLAVE ADDRESS TO DATA REG
RD400_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,RD400_1,,LOOP BACK IF STILL BUSY
,LRI,0X00,0X03,LOAD STOP COMMAND
,IOW,0X00,0X05,ISSUE STOP COMMAND
,LRI,0X00,0X12,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X00,0X04,WRITE MCP REGISTER TO MCP
RD400_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,RD400_2,,LOOP BACK IF STILL BUSY
,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X49,LOAD I2C READ SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
RD400_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,RD400_3,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X00,0X54,LOAD BOGUS WRITE
,IOW,0X00,0X04,WRITE BOGUS
RD400_4,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,RD400_4,,LOOP BACK IF STILL BUSY
,IOR,0X06,0X04,READ MCP REGISTER TO REG
RD400_5,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,RD400_5,,LOOP BACK IF STILL BUSY
,NOP,,,
,LRI,0X00,0X03,STOP COMMAND
,IOW,0X00,0X05,ISSUE STOP COMMAND
,NOP,,,
WR401,IOW,0X09,0X05,WRITE START
,LRI,0X00,0X48,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR401_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR401_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X15,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE REG1 TO MCP REGISTER
WR401_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR401_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,IOW,0X06,0X04,WRITE REG VALUE TO MCP
WR401_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR401_3,,LOOP BACK IF STILL BUSY
RD402,IOW,0X09,0X05,ISSUE I2C START COMMAND
,LRI,0X00,0X4A,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE I2C SLAVE ADDRESS TO DATA REG
RD402_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,RD402_1,,LOOP BACK IF STILL BUSY
,LRI,0X00,0X03,LOAD STOP COMMAND
,IOW,0X00,0X05,ISSUE STOP COMMAND
,LRI,0X00,0X12,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X00,0X04,WRITE MCP REGISTER TO MCP
RD402_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,RD402_2,,LOOP BACK IF STILL BUSY
,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X4B,LOAD I2C READ SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
RD402_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,RD402_3,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X00,0X54,LOAD BOGUS WRITE
,IOW,0X00,0X04,WRITE BOGUS
RD402_4,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,RD402_4,,LOOP BACK IF STILL BUSY
,IOR,0X06,0X04,READ MCP REGISTER TO REG
RD402_5,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,RD402_5,,LOOP BACK IF STILL BUSY
,NOP,,,
,LRI,0X00,0X03,STOP COMMAND
,IOW,0X00,0X05,ISSUE STOP COMMAND
,NOP,,,
WR403,IOW,0X09,0X05,WRITE START
,LRI,0X00,0X4A,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR403_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR403_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X15,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE REG1 TO MCP REGISTER
WR403_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR403_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,IOW,0X06,0X04,WRITE REG VALUE TO MCP
WR403_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR403_3,,LOOP BACK IF STILL BUSY
RD404,IOW,0X09,0X05,ISSUE I2C START COMMAND
,LRI,0X00,0X4C,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE I2C SLAVE ADDRESS TO DATA REG
RD404_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,RD404_1,,LOOP BACK IF STILL BUSY
,LRI,0X00,0X03,LOAD STOP COMMAND
,IOW,0X00,0X05,ISSUE STOP COMMAND
,LRI,0X00,0X12,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X00,0X04,WRITE MCP REGISTER TO MCP
RD404_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,RD404_2,,LOOP BACK IF STILL BUSY
,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X4D,LOAD I2C READ SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
RD404_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,RD404_3,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X00,0X54,LOAD BOGUS WRITE
,IOW,0X00,0X04,WRITE BOGUS
RD404_4,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,RD404_4,,LOOP BACK IF STILL BUSY
,IOR,0X06,0X04,READ MCP REGISTER TO REG
RD404_5,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,RD404_5,,LOOP BACK IF STILL BUSY
,NOP,,,
,LRI,0X00,0X03,STOP COMMAND
,IOW,0X00,0X05,ISSUE STOP COMMAND
,NOP,,,
WR405,IOW,0X09,0X05,WRITE START
,LRI,0X00,0X4C,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR405_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR405_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X15,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE REG1 TO MCP REGISTER
WR405_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR405_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,IOW,0X06,0X04,WRITE REG VALUE TO MCP
WR405_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR405_3,,LOOP BACK IF STILL BUSY
RD406,IOW,0X09,0X05,ISSUE I2C START COMMAND
,LRI,0X00,0X4E,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE I2C SLAVE ADDRESS TO DATA REG
RD406_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,RD406_1,,LOOP BACK IF STILL BUSY
,LRI,0X00,0X03,LOAD STOP COMMAND
,IOW,0X00,0X05,ISSUE STOP COMMAND
,LRI,0X00,0X12,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X00,0X04,WRITE MCP REGISTER TO MCP
RD406_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,RD406_2,,LOOP BACK IF STILL BUSY
,IOW,0X09,0X05,ISSUE START COMMAND
,LRI,0X00,0X4F,LOAD I2C READ SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
RD406_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,RD406_3,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X00,0X54,LOAD BOGUS WRITE
,IOW,0X00,0X04,WRITE BOGUS
RD406_4,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,RD406_4,,LOOP BACK IF STILL BUSY
,IOR,0X06,0X04,READ MCP REGISTER TO REG
RD406_5,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,RD406_5,,LOOP BACK IF STILL BUSY
,NOP,,,
,LRI,0X00,0X03,STOP COMMAND
,IOW,0X00,0X05,ISSUE STOP COMMAND
,NOP,,,
WR407,IOW,0X09,0X05,WRITE START
,LRI,0X00,0X4E,LOAD I2C SLAVE ADDRESS TO CPU REG0
,IOW,0X00,0X04,WRITE SLAVE ADDRESS TO CMD REG
WR407_1,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR407_1,,LOOP BACK IF STILL BUSY
,IOW,0X08,0X05,ISSUE IDLE COMMAND
,LRI,0X01,0X15,LOAD MCP REGISTER NUMBER TO CPU REG1
,IOW,0X01,0X04,WRITE REG1 TO MCP REGISTER
WR407_2,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR407_2,,LOOP BACK IF STILL BUSY
,LRI,0X01,0X03,STOP COMMAND VALUE
,IOW,0X01,0X05,ISSUE STOP COMMAND
,IOW,0X06,0X04,WRITE REG VALUE TO MCP
WR407_3,IOR,0X07,0X05,POLL I2C STATUS BUSY
,ARI,0X07,0X01,MASK BUSY BIT
,BNZ,WR407_3,,LOOP BACK IF STILL BUSY
,JMP,RD400,,
