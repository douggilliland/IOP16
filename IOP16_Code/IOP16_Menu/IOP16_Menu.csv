LABEL,OPCODE,REG_LABEL,OFFSET_ADDR,COMMENT,V3.0.0
START,JSR,INITVDU,,INITIALIZE THE VDU,
,JSR,INITUART,,INITIALIZE THE ACIA UART,
RPT_MENU,JSR,PRINTMENU,,PRINT THE MENU,
GETOPT,JSR,RDKBD,,READ UART RX TO REG1,
,CMP,0X01,0X31,OPT01 SELECTED,
,BNE,SKIPOPT01,,,
,JSR,RUNOPT01,,GO OPTION 1,
,JMP,DONEMENU,,,
SKIPOPT01,CMP,0X01,0X32,OPT02 SELECTED,
,BNE,SKIPOPT02,,,
,JSR,RUNOPT02,,GO OPTION 2,
,JMP,DONEMENU,,,
SKIPOPT02,CMP,0X01,0X33,OPT02 SELECTED,
,BNE,SKIPOPT03,,,
,JSR,RUNOPT03,,GO OPTION 3,
,JMP,DONEMENU,,,
SKIPOPT03,CMP,0X01,0X34,OPT02 SELECTED,
,BNE,SKIPOPT04,,,
,JSR,RUNOPT04,,GO OPTION 4,
,JMP,DONEMENU,,,
SKIPOPT04,CMP,0X01,0X35,OPT05 SELECTED,
,BNE,SKIPOPT05,,,
,JSR,RUNOPT05,,GO OPTION 5,
,JMP,DONEMENU,,,
SKIPOPT05,CMP,0X01,0X36,OPT06 SELECTED,
,BNE,SKIPOPT06,,,
,JSR,RUNOPT06,,GO OPTION 7,
,JMP,DONEMENU,,,
SKIPOPT06,CMP,0X01,0X37,OPT07 SELECTED,
,BNE,DONEMENU,,,
,JSR,RUNOPT07,,GO OPTION 7,
DONEMENU,JMP,RPT_MENU,,,
RUNOPT01,LRI,0X01,0X31,ECHO ‘1’,
,JSR,WRVDU,,,
,JSR,VDUCRLF,,CR,
,LRI,0X00,CTLCEXIT,,
,JSR,PRSTRLF,,,
RPTOPT01,JSR,CHKCTLC,,,
,CMP,0X00,0X01,,
,BEQ,EXITOPT1,,,
,JSR,RDUART,,,
OPT1OUT,JSR,WRVDU,,,
,JMP,RPTOPT01,,,
EXITOPT1,JSR,VDUCRLF,,,
,RTS,,,,
RUNOPT02,LRI,0X01,0X32,ECHO ‘2’,
,JSR,WRVDU,,,
,JSR,VDUCRLF,,,
,LRI,0X00,CTLCEXIT,,
,JSR,PRSTRLF,,,
RPTOPT02,JSR,RDKBD,,,
,CMP,0X01,0X03,,
,BEQ,EXITOPT2,,,
OPT2OUT,JSR,WRUART,,,
,JMP,RPTOPT02,,,
EXITOPT2,RTS,,,,
RUNOPT03,LRI,0X01,0X33,ECHO ‘3’,
,JSR,WRVDU,,,
,JSR,VDUCRLF,,CR,
,LRI,0X00,CTLCEXIT,,
,JSR,PRSTRLF,,,
RPTOPT03,JSR,CHKCTLC,,CHECK KBD FOR CTRL-C,
,CMP,0X00,0X01,,
,BEQ,EXITOP3,,,
,JSR,RDUART,,,
,JSR,WRUART,,,
,JMP,RPTOPT03,,,
EXITOP3,RTS,,,,
RUNOPT04,LRI,0X01,0X34,ECHO ‘4’,
,JSR,WRVDU,,,
,JSR,VDUCRLF,,CR,
,LRI,0X00,CTLCEXIT,,
,JSR,PRSTRLF,,,
RPTOPT04,JSR,RDKBD,,,
,CMP,0X01,0X03,CTRL-C,
,BEQ,EXIT04,,,
,JSR,WRVDU,,,
,JMP,RPTOPT04,,,
EXIT04,RTS,,,,
RUNOPT05,LRI,0X01,0X35,ECHO ‘5’,
,JSR,WRVDU,,,
,JSR,VDUCRLF,,CR,
,LRI,0X00,CTLCEXIT,,
,JSR,PRSTRLF,,,
RPTOPT05,JSR,CHKCTLC,,CHECK KBD FOR CTRL-C,
,CMP,0X00,0X01,,
,BEQ,EXIT05,,,
,IOW,0X08,USR_LED,WRITE 0 TO LED,
,LRI,0X01,0X01,,
,JSR,WAITSECS,,,
,JSR,CHKCTLC,,CHECK KBD FOR CTRL-C,
,CMP,0X00,0X01,,
,BEQ,EXIT05,,,
,IOW,0X09,USR_LED,WRITE 1 TO LED,
,LRI,0X01,0X01,,
,JSR,WAITSECS,,,
,JMP,RPTOPT05,,,
EXIT05,RTS,,,,
RUNOPT06,LRI,0X01,0X36,ECHO ‘6’,
,JSR,WRVDU,,,
,JSR,VDUCRLF,,CR,
,LRI,0X00,CTLCEXIT,,
,JSR,PRSTRLF,,,
RPTOPT06,IOR,0X00,RD_KEY,READ KEY TO REG0,
,IOW,0X00,USR_LED,WRITE LED FROM REG0,
,JSR,CHKCTLC,,CHECK KBD FOR CTRL-C,
,CMP,0X00,0X01,,
,BNE,RPTOPT06,,,
EXIT06,RTS,,,,
RUNOPT07,LRI,0X01,0X37,ECHO ‘7’,
,JSR,WRVDU,,,
,JSR,VDUCRLF,,CR-LF,
,LRI,0X00,CTLCEXIT,PRINT CTRL-C TO EXIT,
,JSR,PRSTRLF,,,
LOOPOPT7C,LRI,0X02,0X01,ROUTINE TO BOUNCE LED ON GPIOS,
LOOPOPT7A,IOW,0X02,WR_GPIO3,REG2 HAS VALUE TO BOUNCE,
,LRI,0X01,0XC8,200 mSEC COUNT IN REG1,
,JSR,WAITMSECS,,,
,SLL,0X02,0X01,SHIFT BIT OVER,
,CMP,0X02,0X00,,
,BNE,LOOPOPT7A,,,
,LRI,0X02,0x00,,
,IOW,0X02,WR_GPIO3,,
,LRI,0X02,0X01,,
LOOPOPT7B,IOW,0X02,WR_GPIO4,REG2 HAS VALUE TO BOUNCE,
,LRI,0X01,0XC8,200 mSEC COUNT IN REG1,
,JSR,WAITMSECS,,,
,SLL,0X02,0X01,SHIFT BIT OVER,
,CMP,0X02,0X00,,
,BNE,LOOPOPT7B,,,
,LRI,0X02,0X00,,
,IOW,0X02,WR_GPIO4,,
,JSR,CHKCTLC,,CHECK KBD FOR CTRL-C,
,CMP,0X00,0X01,,
,BNE,LOOPOPT7C,,,
,LRI,0X02,0X00,,
,IOW,0X02,WR_GPIO3,CLEAR OUTPUTS,
,IOW,0X02,WR_GPIO4,CLEAR OUTPUTS,
,RTS,,,,
PRINTMENU,LRI,0X00,MENUTOP,PRINT BANNER,
,JSR,PRSTRLF,,PRINT OUT STRING TO VDU,
,LRI,0X00,OPT01,PRINT MENU OPT01,
,JSR,PRSTRLF,,,
,LRI,0X00,OPT02,PRINT MENU OPT02,
,JSR,PRSTRLF,,,
,LRI,0X00,OPT03,PRINT MENU OPT03,
,JSR,PRSTRLF,,,
,LRI,0X00,OPT04,PRINT MENU OPT04,
,JSR,PRSTRLF,,,
,LRI,0X00,OPT05,PRINT MENU OPT05,
,JSR,PRSTRLF,,,
,LRI,0X00,OPT06,PRINT MENU OPT06,
,JSR,PRSTRLF,,,
,LRI,0X00,OPT07,PRINT MENU OPT07,
,JSR,PRSTRLF,,,
,LRI,0X00,SELOPT,PRINT MENU SELECT OPT,
,JSR,PRSTR,,,
,RTS,,,,
PRSTR,IOW,0X00,LD_CON_ADR,LOAD CONSTANTS ADDRESS,
PRSTR3,IOR,0X01,RD_CON_DAT,READ CHAR (NEXT),
,CMP,0X01,0X00,IS END OF STRING?,
,BNE,SKIPPS3,,NOT END OF STRING,
,RTS,,,RETURN IF END,
SKIPPS3,JSR,WRVDU,,PRINT TO VDU,
,JMP,PRSTR3,,LOOP UNTIL NULL TERM,
PRSTRLF,IOW,0X00,LD_CON_ADR,LOAD CONSTANTS ADDRESS,
PRSTR2,IOR,0X01,RD_CON_DAT,READ CHAR (NEXT),
,CMP,0X01,0X00,IS END OF STRING?,
,BNE,SKIPPS,,NOT END OF STRING,
,LRI,0X01,0X0D,CR,
,JSR,WRVDU,,,
,LRI,0X01,0X0A,LF,
,JSR,WRVDU,,,
,RTS,,,RETURN IF END,
SKIPPS,JSR,WRVDU,,PRINT TO VDU,
,JMP,PRSTR2,,LOOP UNTIL NULL TERM,
RDKBD,JSR,WTKBRX,,WAIT FOR KBD RX CHAR,
,IOR,0X01,KBD_DATA,READ KBD CHAR,
,RTS,,,,
WTKBRX,IOR,0X00,KBD_STAT,READ KBD STATUS,
,ARI,0X00,0X01,RX RDY BIT,
,BEZ,WTKBRX,,LOOP UNTIL CHAR PRESENT,
,RTS,,,,
POLLKBD,IOR,0X01,KBD_STAT,,
,RTS,,,,
INITUART,LRI,0X00,0X03,RESET UART COMMAND,
,IOW,0X00,UART_CTRL,WRITE UART CMD REG,
,LRI,0X00,0X20,TX CTRLS RTS,
,IOW,0X00,UART_CTRL,WRITE UART CMD REG,
,RTS,,,,
RDUART,JSR,WTUARTRXRDY,,WAIT FOR UART RX CHAR,
,IOR,0X01,UART_RX,READ UART CHAR,
,RTS,,,RETURN KBD DATA IN REG1,
WTUARTRXRDY,IOR,0X01,UART_STAT,READ UART STATUS,
,ARI,0X01,0X01,RX RDY BIT,
,BEZ,WTUARTRXRDY,,LOOP UNTIL CHAR PRESENT,
,RTS,,,,
WRUART,JSR,WTUARTTXBSY,,WRITE REG1 TO THE UART TX,
,IOW,0X01,UART_TX,,
,RTS,,,,
WTUARTTXBSY,IOR,0X00,UART_STAT,WRITE REG1 OUT UART,
,ARI,0X00,0X02,TX EMPTY BIT,
,BEZ,WTUARTTXBSY,,LOOP WHILE NOT EMPTY,
,RTS,,,,
INITVDU,LRI,0X00,0X03,RESET TERMINAL COMMAND,
,IOW,0X00,VDU_CTRL,WRITE VDU CMD REG,
,LRI,0X00,0X20,TX CTRLS RTS,
,IOW,0X00,VDU_CTRL,WRITE VDU CMD REG,
CLRSCR,LRI,0X01,0X0C,ANSI CLEAR THE SCREEN CMD,
,JSR,WRVDU,,WRITE OUT CHAR IN R1,
YELLOW,LRI,0X01,0X1B,ESC SEQ FOR YELLOW CHARS,
,JSR,WRVDU,,WRITE OUT CHAR IN R1,
,LRI,0X01,0X5B,[,
,JSR,WRVDU,,WRITE OUT CHAR IN R1,
,LRI,0X01,0X33,3,
,JSR,WRVDU,,WRITE OUT CHAR IN R1,
,LRI,0X01,0X33,3,
,JSR,WRVDU,,WRITE OUT CHAR IN R1,
,LRI,0X01,0X6D,m ,
,JSR,WRVDU,,WRITE OUT CHAR IN R1,
,RTS,,,,
WRVDU,JSR,WTVDUTXRDY,,WAIT VDU TX READY,
,IOW,0X01,VDU_TX,WRITE OUT R1 TO SCREEN,
,RTS,,,,
WTVDUTXRDY,IOR,0X00,VDU_STAT,READ VDU STATUS,
,ARI,0X00,0X02,TX EMPTY FLAG,
,BEZ,WTVDUTXRDY,,WAIT UNTIL TX EMPTY,
,RTS,,,,
VDUCRLF,LRI,0X01,0X0D,CR,
,JSR,WRVDU,,,
,LRI,0X01,0X0A,LF,
,JSR,WRVDU,,,
,RTS,,,,
CHKCTLC,IOR,0X01,KBD_STAT,READ KBD STATUS,
,CMP,0x01,0X00,,
,BEQ,DONCTLC,,KEY WAS NOT PRESSED,
SKPCTLC,IOR,0X00,KBD_DATA,READ KBD DATA,
,CMP,0X00,0X03,IS CTRL-C,
,BNE,DONCTLC,,,
,LRI,0X00,0X01,RETURNS 1 IF CTRL-C,
,JMP,EXITCTLC,,,
DONCTLC,LRI,0X00,0X00,,
EXITCTLC,RTS,,,,
WAITSECS,IOW,0X01,WR_TIME_S,STORE REG0 TO START TIMER,
WTLPSEC,IOR,0X01,TIME_STAT,READ TIMER,
,ARI,0X01,0X01,CHECK BUSY,
,BNZ,WTLPSEC,,,
,RTS,,,,
WAITMSECS,IOW,0X01,WR_TIME_MS,STORE REG0 TO START TIMER,
WTLPMSEC,IOR,0X01,TIME_STAT,READ TIMER,
,ARI,0X01,0X01,CHECK BUSY,
,BNZ,WTLPMSEC,,,
,RTS,,,,
